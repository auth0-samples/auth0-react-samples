# Environment variables to be defined in the build configuration:
# AUTH0_TEST_CLIENT_ID = Client id to use in test
# AUTH0_TEST_DOMAIN = Domain to use in test
# AUTH0_TEST_AUDIENCE = API Audience to use in test

# Jobs and Workflows
version: 2.1
orbs:
  node: circleci/node@3.0.0
jobs:
  checkout:
    machine: true
    steps:
      - checkout
      - run: git clone https://github.com/auth0-samples/spa-quickstarts-tests scripts
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - scripts
  sample-01:
    machine: true
    environment:
      - AUTH0_CFG: Sample-01/src/auth_config.json
      - SAMPLE_PATH: Sample-01
    steps:
      - node/install:
          install-yarn: true
          node-version: latest
      - attach_workspace:
          at: ~/
      - run:
          name: Replace Auth0 test credentials
          command: |
            echo "{ \"domain\": \"$AUTH0_TEST_DOMAIN\", \"clientId\": \"$AUTH0_TEST_CLIENT_ID\", \"audience\": \"$AUTH0_TEST_API_IDENTIFIER\" }" > $AUTH0_CFG

      - run:
          name: Build pull request
          command: |
            docker build -t $CIRCLE_JOB ./$SAMPLE_PATH
            docker run -d -p 3000:3000 --name $CIRCLE_SHA1 $CIRCLE_JOB
      - run:
          name: Wait for app to be available
          command: |
            sleep 10
            docker run --network host --rm appropriate/curl --retry 8 --retry-connrefused -v localhost:3000
      - node/install-packages:
          pkg-manager: yarn
          app-dir: Sample-01
      - run:
          name: Run unit tests
          command: |
            cd Sample-01
            yarn test
      - run:
          name: Run integration tests
          command: |
            docker create --network host --name tester codeception/codeceptjs codeceptjs run-multiple --all --steps --verbose
            docker cp $(pwd)/lock_login_spa_test.js tester:/tests/lock_login_test.js
            docker cp $(pwd)/codecept.conf.js tester:/tests/codecept.conf.js
            docker start -i tester
          working_directory: scripts
      - run:
          name: Copy app container logs
          command: |
            mkdir -p /tmp/out
            docker logs $CIRCLE_SHA1 > /tmp/out/app_logs.log
            docker cp tester:/tests/out /tmp/
          when: on_fail
      - store_artifacts:
          path: /tmp/out

workflows:
  version: 2
  quickstarts_login:
    jobs:
      - checkout:
          context: Quickstart SPA Test
      - sample-01:
          context: Quickstart SPA Test
          requires:
            - checkout
